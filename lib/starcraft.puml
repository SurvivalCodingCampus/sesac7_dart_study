@startuml

    abstract class Unit extends Object {
    - int attackPower
    - int mp
    - int moveSpeed
    - int attackSpeed

     - void move()
}
abstract class Structure extends Object {
    - int productionSpeed
}

abstract class TerranStructure extends Structure
abstract class ZergStructure extends Structure implements Recoverable
abstract class ProtossStructure extends Structure implements Recoverable {
    - int shield
}

abstract class Bionic extends Unit implements Healable
abstract class Mechanic extends Unit implements Attacker

abstract class TerranBionic extends Bionic
abstract class TerranMechanic extends Mechanic
abstract class ZergBionic extends Bionic implements Recoverable, Attacker
abstract class ProtossBionic extends Bionic implements Recoverable, Attacker {
    - int shield
}
abstract class ProtossMechanic extends Mechanic implements Recoverable {
    - int shield
}


class Marine extends TerranBionic implements Attacker
class Medic extends TerranBionic {
    - int healPower
    - void heal(Healable target)
}

class Vulture extends TerranMechanic
class Tank extends TerranMechanic
class SCV extends TerranMechanic implements Worker, Healable {
    - void repair(Mechanic target)
}

class Zergling extends ZergBionic
class Hydra extends ZergBionic
class Drone extends ZergBionic implements Worker

class Zealot extends ProtossBionic
class Dragun extends ProtossMechanic
class Probe extends ProtossMechanic implements Worker

class CommandCenter extends TerranStructure
class SupplyDepot extends TerranStructure
class EngineeringBay extends TerranStructure

class Hatchery extends ZergStructure
class SpawningPool extends ZergStructure
class SunkenColony extends ZergStructure

class Nexus extends ProtossStructure
class Gateway extends ProtossStructure
class StarGate extends ProtossStructure

interface Worker {
    {abstract} - void mining(Fuel resource)
}
abstract class Object {
    - int hp
    - int defensePower
    {abstract} - void attacked(int attackPower)
}
interface Attacker {
    {abstract} - void attack(Object target)
}
interface Healable {
    {abstract} - void healed(int healPower)
}
interface Recoverable {
    {abstract} - void recover()
}
abstract class Fuel {
    + int amount
}
class Mineral extends Fuel
class Gas extends Fuel
class Player {
    + Mineral mineral
    + Gas gas
}
class InputController {
    - List<Unit> getPickedUnits()
}
@enduml